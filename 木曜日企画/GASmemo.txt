function doPost(e) {
  try {
    const spreadsheet = SpreadsheetApp.openById('19BXctFx0VW--k5BmatYhzcqbs007-GnUh3ZgESmwY_8');
    const sheet = spreadsheet.getSheetByName("シート1");
    
    // 固定の順序でデータを取得
    const data = [
      e.parameter.yomi1 || '',
      e.parameter.yomi2 || '',
      e.parameter.yomi3 || '',
      e.parameter.yomi4 || '',
      e.parameter.yomi5 || '',
      e.parameter.yomi6 || '',
      e.parameter.yomi7 || '',
      e.parameter.yomi8 || '',
      e.parameter.yomi9 || '',
      e.parameter.yomi10 || '',
      e.parameter.jp_01 || '',
      e.parameter.jp_02 || '',
      e.parameter.choice || '',
      e.parameter.jp5 || '',
      e.parameter.contact || '',
      e.parameter.math_01 || '',
      e.parameter.math_02 || '',
      e.parameter.math_03 || '',
      e.parameter.math_041 || '',
      e.parameter.math_042 || '',
      e.parameter.math_043 || '',
      e.parameter.science_01 || '',
      e.parameter.science_02 || '',
      e.parameter.science_03_1 || '',
      e.parameter.science_03_2 || '',
      e.parameter.science_04 || '',
      e.parameter.science_05 || '',
      e.parameter.social_01 || '',
      e.parameter.social_02 || '',
      e.parameter.social_03 || '',
      e.parameter.social_04 || '',
      e.parameter.social_05 || '',
      e.parameter.text || ''
    ];
    
    // スプレッドシートにデータを追加
    sheet.appendRow(data);
    
    // 条件付き書式設定を適用
    const lastRow = sheet.getLastRow();
    if (lastRow > 2) {  // 2行目以降のデータがある場合
      const rules = [];
      
      // 列名の配列を作成（Aから始まる）
      const columnNames = [];
      for (let i = 0; i < data.length; i++) {
        let colName = '';
        let num = i;
        while (num >= 0) {
          colName = String.fromCharCode(65 + (num % 26)) + colName;
          num = Math.floor(num / 26) - 1;
        }
        columnNames.push(colName);
      }
      
      // 各列に対して条件付き書式設定を適用
      for (let i = 0; i < data.length; i++) {
        const range = sheet.getRange(3, i + 1, lastRow - 2, 1);
        const rule = SpreadsheetApp.newConditionalFormatRule()
          .whenFormulaSatisfied(`=AND(${columnNames[i]}3<>"",${columnNames[i]}3=${columnNames[i]}$2)`)
          .setBackground('#ffcdd2')  // 薄い赤色
          .setRanges([range])
          .build();
        rules.push(rule);
      }
      
      // 条件付き書式設定を適用
      sheet.setConditionalFormatRules(rules);
    }
    
    return ContentService.createTextOutput(JSON.stringify({ 
      status: "success",
      message: "データが正常に保存されました"
    }))
    .setMimeType(ContentService.MimeType.JSON);
    
  } catch (error) {
    return ContentService.createTextOutput(JSON.stringify({ 
      status: "error",
      message: error.toString()
    }))
    .setMimeType(ContentService.MimeType.JSON);
  }
}

function doGet(e) {
  return ContentService.createTextOutput(JSON.stringify({ 
    status: "success",
    message: "API is working"
  }))
  .setMimeType(ContentService.MimeType.JSON);
}